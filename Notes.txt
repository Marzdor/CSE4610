Boot Sector – Which stores information about the disk, and which file system it has been formatted with.

    0-2     Assembly command to jump to the bootstrap area. in x86 Assembly, this is: JMP NOP which translates to: 0xEB 0x90. Since the address where the code begins in the boot sector is at byte 62 (0x3E), the complete data is: EB 3E 90.
    3-10    OEM name/version (E.g. “IBM 3.3”, “IBM 20.0”, “MSDOS5.0”, “MSWIN4.0”.
    11-12   Number of bytes per sector.
    13      Number of sectors per cluster.
    14-15   Number of Reserved Sectors. This is the number of sectors that appear before, and including, the boot sector.
    16      Number of FATs on the disk. Normally this is 2.
    17-18   Number of directory entries in the Root Directory. This must be set so that entire sectors are used. Each entry requires 32 bytes.
    19-20   Total number of sectors in the file system. This is used to determine how much space is available in the Data Area to store files.
    21      Media descriptor type. 0xF8 = "hard disk"
    22-23   Number of sectors per FAT. Each sector is allocated 12-bits (hence FAT12) in the FAT. That means that 24-bits or 3 bytes is used for every 2 files. The first three bytes in the FAT are reserved.
    24-25   Number of sectors per track. This number is used by the BIOS to determine how to best access the disk.
    26-27   Number of heads (ie. sides) on the disk. This number is used by the BIOS to determine how to best access the disk.
    28-29   Number of hidden sectors. This is the number of sectors on the physical disk preceding the start of the volume. (that is, before the boot sector itself).
    30-509  Bootstrap area. This holds the executable boot code (or bootstrap code) that starts the operating system.
    510-511 Reserved Signature 0x55 0xAA



Fat 12 cluster values

    Value               Meaning
    0x00                Unused
    0xFF0-0xFF6         Reserved cluster
    0xFF7               Bad cluster
    0xFF8-0xFFF         Last cluster in a file
    (anything else)     Number of the next cluster in the file

    F0 FF FF FF FF FF FF FF F7 00

    FF0 FFF FFF FFF FFF FF7 F00

Directory structure

    0-7     Filename                    if 1st byte =E5, then the directory entry is free; if 1st byte =x00, then this directory entry is free and all the remaining directory entries in this directory are also free.
    8-10    Extension
    11      Attributes (see details below)
    12-13   Reserved
    14-15   Creation Time
    16-17   Creation Date
    18-19   Last Access Date
    20-21   Ignore in FAT12
    22-23   Last Write Time
    24-25   Last Write Date
    26-27   First Logical Cluster       
    28-31   File Size (in bytes)

    Bit Mask Attribute
    0   0x01 Read-only
    1   0x02 Hidden
    2   0x04 System
    3   0x08 Volume label
    4   0x10 Subdirectory
    5   0x20 Archive
    6   0x40 Unused
    7   0x80 Unused 


    test file1:  
    464F4F2020202020424152000000000000000000000000000000000200000000
        464F4F2020202020    424152  00  0000    0000    0000    0000    0000    0000    0000    0002    00000000
        "FOO     "          "BAR"   ""  ""      ""      ""      ""      ""      ""      ""      "2"     ""
